[{"/home/ubuntu/portfolio/src/index.js":"1","/home/ubuntu/portfolio/src/App.js":"2","/home/ubuntu/portfolio/src/reportWebVitals.js":"3","/home/ubuntu/portfolio/src/TitleCard.js":"4","/home/ubuntu/portfolio/src/Paragraph.js":"5","/home/ubuntu/portfolio/src/SkillsTable.js":"6","/home/ubuntu/portfolio/src/SoftwareTable.js":"7","/home/ubuntu/portfolio/src/Canvas.js":"8","/home/ubuntu/portfolio/src/Background.js":"9","/home/ubuntu/portfolio/src/Projects.js":"10","/home/ubuntu/portfolio/src/Title.js":"11","/home/ubuntu/portfolio/src/Header.js":"12"},{"size":457,"mtime":1609294839040,"results":"13","hashOfConfig":"14"},{"size":3690,"mtime":1609626024354,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608535325090,"results":"16","hashOfConfig":"14"},{"size":976,"mtime":1609308857256,"results":"17","hashOfConfig":"14"},{"size":1102,"mtime":1609623278384,"results":"18","hashOfConfig":"14"},{"size":5138,"mtime":1609294080971,"results":"19","hashOfConfig":"14"},{"size":5335,"mtime":1609292016654,"results":"20","hashOfConfig":"14"},{"size":2298,"mtime":1608586231501,"results":"21","hashOfConfig":"14"},{"size":1262,"mtime":1609294862747,"results":"22","hashOfConfig":"14"},{"size":6637,"mtime":1609296150397,"results":"23","hashOfConfig":"14"},{"size":236,"mtime":1609227967168,"results":"24","hashOfConfig":"14"},{"size":1076,"mtime":1609624345398,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1wwmjs9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},"/home/ubuntu/portfolio/src/index.js",[],["60","61"],"/home/ubuntu/portfolio/src/App.js",["62","63","64","65"],"/home/ubuntu/portfolio/src/reportWebVitals.js",[],"/home/ubuntu/portfolio/src/TitleCard.js",["66","67"],"import { Spring } from 'react-spring/renderprops';\r\nimport {Keyframes} from 'react-spring/renderprops';\r\nimport CanvasBackground from './Canvas.js'\r\n\r\nexport default function TitleCard() {\r\n  return (\r\n    <div className=\"TitleCard\">\r\n    \r\n    <Spring\r\n\r\n    from={{marginTop: '-50vh'}}\r\n    to={{marginTop: '0px auto'}}\r\n    \r\n    >\r\n    {props =>(\r\n      <div style={props}>\r\n        <Spring\r\n\r\n        from={{opacity: 0, zIndex: 1}}\r\n        to={{opacity: 1, zIndex: 1}}\r\n\r\n        >\r\n        {props =>(\r\n        <div style={props}>\r\n\r\n          <div className=\"InnerTitle\"> \r\n            <CanvasBackground/>\r\n            <img className=\"CircleImage\" src={process.env.PUBLIC_URL + \"/images/JoshuaWilliams.jpg\"}/>\r\n            <h1 className=\"WhiteHeader\">Joshua Williams</h1>\r\n            <p className=\"WhiteFooter\"> Software Developer </p>\r\n        </div>\r\n        </div>\r\n        )}\r\n        </Spring>\r\n      </div>\r\n      )}\r\n    \r\n    </Spring>\r\n    </div>\r\n  );\r\n}\r\n\r\n","/home/ubuntu/portfolio/src/Paragraph.js",["68","69"],"import { Spring } from 'react-spring/renderprops';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport React from 'react';\r\n\r\n\r\nexport default class Paragraph extends React.Component {\r\n  visible = false;\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  onChangeVisibility = (isVisible) => {\r\n    this.visible = isVisible;\r\n    this.forceUpdate();\r\n  }\r\n  render(){\r\n\r\n    return (\r\n      <>\r\n        <VisibilitySensor active = {this.active} onChange={this.onChangeVisibility} active={!this.visible} partialVisibility={true}>\r\n        {({ isVisible }) => (\r\n          <div>\r\n            <Spring\r\n            from={{opacity: 0}}\r\n            to={{opacity: isVisible ? 1 : 0}}\r\n            config={{duration:500, delay: this.props.delay}}\r\n            >\r\n            {props =>(\r\n            <div style={props}>\r\n               <p className={this.props.fontStyle}>\r\n                {this.props.contents}\r\n                </p>\r\n            </div>\r\n            )}\r\n            </Spring>\r\n          </div>\r\n          )}\r\n        </VisibilitySensor>\r\n      </>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n","/home/ubuntu/portfolio/src/SkillsTable.js",["70","71","72","73","74"],"import { Spring } from 'react-spring/renderprops';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MediaQuery from 'react-responsive'\r\n\r\nexport default class SkillTable extends React.Component {\r\n  visible = false;\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  onChangeVisibilityReversed = (isVisible) => {\r\n    this.visible = !isVisible;\r\n    this.forceUpdate();\r\n  }\r\n  onChangeVisibility = (isVisible) => {\r\n    this.visible = isVisible;\r\n    this.forceUpdate();\r\n  }\r\n  render(){\r\n    const isMobile = window.innerWidth <= 500;\r\n    return (\r\n      <>\r\n      <MediaQuery minWidth={800} onChange={this.onChangeVisibilityReversed}>\r\n        <VisibilitySensor partialVisibility={true} active = {this.active} onChange={this.onChangeVisibility} active={!this.visible}>\r\n        {({ isVisible }) => (\r\n          <div className=\"floatRight\">\r\n            <Spring\r\n           from={{opacity: 0, marginLeft: 300, marginRight: 300, float:\"left\"}}\r\n            to={{opacity: isVisible ? 1 : 0, marginLeft: isVisible ? 0 : 300, marginRight: isVisible ? 0 : 300, float: isVisible ? \"right\" : \"left\"}}\r\n            config={{delay: this.props.delay}}\r\n            >\r\n            {props =>(\r\n            <div style={props}>\r\n               <table className=\"SoftwareTable\">\r\n               <tbody>\r\n               <tr>\r\n                 <th className=\"TableHeaderCell\">Languages / Frameworks</th>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">C</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">C++</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Java</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Python</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">C#</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Javascript</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">HTML5</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">CSS</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">MySQL</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Redis</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Node JS</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">React</td>\r\n               \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableFooterCell\">PHP</td>\r\n               \r\n               </tr>\r\n               </tbody>\r\n               </table>\r\n            </div>\r\n            )}\r\n            </Spring>\r\n          </div>\r\n          )}\r\n        </VisibilitySensor>\r\n      </MediaQuery>\r\n      <MediaQuery maxWidth={799}>\r\n        \r\n        <div className=\"mobileTable\">\r\n        <table className=\"SoftwareTable\">\r\n        <tbody>\r\n               <tr>\r\n                 <th className=\"TableHeaderCell\">Languages / Technologies</th>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">C</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">C++</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Java</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Python</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">C#</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Javascript</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">HTML5</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">CSS</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">MySQL</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Redis</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Node JS</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">React</td>\r\n               \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableFooterCell\">PHP</td>\r\n               \r\n               </tr>\r\n               </tbody>\r\n               </table>\r\n\r\n               </div>\r\n\r\n      </MediaQuery>\r\n      </>\r\n      \r\n    );\r\n  }\r\n}","/home/ubuntu/portfolio/src/SoftwareTable.js",["75","76","77","78","79"],"import { Spring } from 'react-spring/renderprops';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MediaQuery from 'react-responsive'\r\n\r\nexport default class SoftwareTable extends React.Component {\r\n  visible = false;\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  onChangeVisibilityReversed = (isVisible) => {\r\n    this.visible = !isVisible;\r\n    this.forceUpdate();\r\n  }\r\n  onChangeVisibility = (isVisible) => {\r\n    this.visible = isVisible;\r\n    this.forceUpdate();\r\n  }\r\n  render(){\r\n    const isMobile = window.innerWidth <= 500;\r\n    return (\r\n      <>\r\n      <MediaQuery minWidth={800} onChange={this.onChangeVisibilityReversed}>\r\n        <VisibilitySensor partialVisibility={true} active = {this.active} onChange={this.onChangeVisibility} active={!this.visible}>\r\n        {({ isVisible }) => (\r\n          <div className=\"floatRight\">\r\n            <Spring\r\n           from={{opacity: 0, marginLeft: 300, marginRight: 300, float:\"right\"}}\r\n            to={{opacity: isVisible ? 1 : 0, marginLeft: isVisible ? 0 : 300, marginRight: isVisible ? 0 : 300, float: isVisible ? \"left\" : \"right\"}}\r\n            config={{delay: this.props.delay}}\r\n            >\r\n            {props =>(\r\n            <div style={props}>\r\n               <table className=\"SoftwareTable\">\r\n               <tbody>\r\n               <tr>\r\n                 <th className=\"TableHeaderCell\">Software / Concepts</th>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Visual Studio (.NET Framework)</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">MySQL Workbench</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Linux Terminal</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Amazon Web Services</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Azure Devops</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Github</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">SSH</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Unity</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Docker</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Various IDEs</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">REST API</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Agile Development Practices</td>\r\n               \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableFooterCell\">Slack</td>\r\n               \r\n               </tr>\r\n               </tbody>\r\n               </table>\r\n            </div>\r\n            )}\r\n            </Spring>\r\n          </div>\r\n          )}\r\n        </VisibilitySensor>\r\n      </MediaQuery>\r\n      <MediaQuery maxWidth={799}>\r\n        \r\n        <div className=\"mobileTable\">\r\n        <table className=\"SoftwareTable\">\r\n        <tbody>\r\n               <tr>\r\n                 <th className=\"TableHeaderCell\">Software</th>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Visual Studio (.NET Framework)</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">MySQL Workbench</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Linux Terminal</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Amazon Web Services</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Azure Devops</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Github</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">SSH</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Unity</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Docker</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Various IDEs</td>\r\n                 \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">REST API</td>\r\n                \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableCell\">Microsoft Office Suite</td>\r\n               \r\n               </tr>\r\n               <tr>\r\n                 <td className=\"TableFooterCell\">Sublime Text</td>\r\n               \r\n               </tr>\r\n               </tbody>\r\n               </table>\r\n\r\n               </div>\r\n\r\n      </MediaQuery>\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n","/home/ubuntu/portfolio/src/Canvas.js",["80","81","82"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default function CanvasBackground() {\r\n\r\n  return (\r\n      <div className=\"Canvas\"> \r\n      <Particles style ={{float:\"left\"}} width=\"35%\" height=\"550px\"\r\n        params={{ \r\n          particles: { \r\n            number: { \r\n              value: 200, \r\n              density: { \r\n                enable: true, \r\n                value_area: 1000, \r\n              }, \r\n            }, \r\n            color: {\r\n              value: '#99C1B9'\r\n              },\r\n              opacity: {\r\n                value: 0.5,\r\n                anim: {\r\n                    enable: true\r\n                    }\r\n                },\r\n                size: {\r\n                  value: 5,\r\n                  random: true,\r\n                  anim: {\r\n                      enable: true,\r\n                      speed: 3\r\n                  }\r\n                },\r\n                line_linked: {\r\n                  color: {\r\n                    value: '#99C1B9'\r\n                  },\r\n                  enable: true\r\n                },\r\n                move: {\r\n                  speed: 1.5\r\n                }\r\n          }, \r\n        }} \r\n\r\n      /> \r\n   <Particles style ={{float:\"right\"}} width=\"35%\" height=\"550px\"\r\n        params={{ \r\n          particles: { \r\n            number: { \r\n              value: 200, \r\n              density: { \r\n                enable: true, \r\n                value_area: 1000, \r\n              }, \r\n            }, \r\n            color: {\r\n              value: '#99C1B9'\r\n              },\r\n              opacity: {\r\n                value: 0.5,\r\n                anim: {\r\n                    enable: true\r\n                    }\r\n                },\r\n                size: {\r\n                  value: 5,\r\n                  random: true,\r\n                  anim: {\r\n                      enable: true,\r\n                      speed: 3\r\n                  }\r\n                },\r\n                line_linked: {\r\n                  color: {\r\n                    value: '#99C1B9'\r\n                  },\r\n                  enable: true\r\n                },\r\n                move: {\r\n                  speed: 1.5\r\n                }\r\n          }, \r\n        }} \r\n        />\r\n    </div> \r\n\r\n  );\r\n}\r\n\r\n","/home/ubuntu/portfolio/src/Background.js",["83","84","85"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default function Background() {\r\n  return (\r\n      \r\n        <div className=\"Background\"> \r\n        <Particles className=\"Background\" width=\"100%\" height=\"100%\"\r\n          params={{ \r\n\r\n            particles: { \r\n              number: { \r\n                value: 50, \r\n                density: { \r\n                  enable: true, \r\n                  value_area: 1000, \r\n                }, \r\n              }, \r\n              color: {\r\n                value: '#6FA6A4'\r\n                },\r\n                opacity: {\r\n                  value: 0.5,\r\n                  anim: {\r\n                      enable: true\r\n                      }\r\n                  },\r\n                  size: {\r\n                    value: 5,\r\n                    random: true,\r\n                    anim: {\r\n                        enable: true,\r\n                        speed: 3\r\n                    }\r\n                  },\r\n                  line_linked: {\r\n                    enable: false\r\n                  },\r\n                  move: {\r\n                    speed: 1\r\n                  }\r\n            }, \r\n          }} \r\n        /> \r\n     \r\n      </div> \r\n\r\n\r\n  );\r\n}\r\n\r\n","/home/ubuntu/portfolio/src/Projects.js",["86","87","88","89","90","91","92"],"import { Spring } from 'react-spring/renderprops';\r\nimport {Keyframes} from 'react-spring/renderprops';\r\nimport CanvasBackground from './Canvas.js'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport React, { useState } from 'react';\r\nimport MediaQuery from 'react-responsive'\r\n\r\nexport default function ProjectView(){\r\n  const [radioState, setRadioState] = useState('1');\r\n  \r\n  return(\r\n    <div>\r\n      <CategorySelector/>\r\n      <ButtonArea/>\r\n    </div>\r\n    )\r\n\r\n  \r\n  function changeState(number){\r\n    setRadioState(number);\r\n  }\r\n  function ButtonArea(){\r\n    const WebApps = [\r\n    {\r\n    key: 1, exists:true, name:\"Metube\", thumbnail:process.env.PUBLIC_URL + \"/images/Metube.png\", link:\"https://github.com/JoshuaWilliams9107/Metube\",\r\n    exists2:true,name2:\"DriverHub\", thumbnail2:process.env.PUBLIC_URL + \"/images/DriverHub.png\", link2:\"https://github.com/JoshuaWilliams9107/DriverHub\",\r\n    exists3:true, name3:\"Porfolio Website\", thumbnail3:process.env.PUBLIC_URL + \"/images/PortfolioWebsite.png\", link3:\"https://github.com/JoshuaWilliams9107/PorfolioWebsite\"\r\n    }]\r\n    const DesktopApps = [\r\n    {key: 2, exists:true, name:\"Chess Program\", thumbnail:process.env.PUBLIC_URL + \"/images/Chess.png\", link:\"https://github.com/JoshuaWilliams9107/Chess\",\r\n     exists2:true, name2:\"Rune Importer\", thumbnail2:process.env.PUBLIC_URL + \"/images/RuneImporter.png\", link2:\"https://github.com/JoshuaWilliams9107/RuneImporter\"\r\n    }]\r\n    const VideoGames = [\r\n    {key: 3, exists:true, name:\"VR Fishing Simulator\", thumbnail:process.env.PUBLIC_URL + \"/images/FishingSimulator.png\", link:\"https://gitlab.com/group-6-vr/fishing-simulator\",\r\n     exists2:true, name2:\"Falling Puzzle Game\", thumbnail2:process.env.PUBLIC_URL + \"/images/FallingPuzzleGame.png\", link2:\"https://github.com/JoshuaWilliams9107/Falling-Puzzle-Game\",\r\n    }\r\n    ]\r\n    if(radioState == 1){\r\n      return <DisplayTable projects={WebApps}/>;\r\n    }else if(radioState == 2){\r\n      return <DisplayTable projects={DesktopApps}/>;\r\n    }else if(radioState == 4){\r\n      return <DisplayTable projects={VideoGames}/>;\r\n    }\r\n  }\r\n  //./images/blankPixel.png\r\n  \r\n  function DisplayTable(props) {\r\n    const WebApps = props.projects.map((proj) => (\r\n      <Spring\r\n            key={proj.key}\r\n            from={{opacity: 0}}\r\n            to={{opacity: 1}}\r\n            config={{duration:500, delay: 0}}\r\n            >\r\n            {props =>(\r\n            <div style={props} className=\"table-row\">\r\n              <MediaQuery minWidth={800}>\r\n                \r\n                {proj.exists ? \r\n                \t(\r\n                <div className=\"cell\">\r\n                  <Button variant=\"dark\" className=\"ButtonProject\" href={proj.link}>\r\n                    <img src={proj.thumbnail} alt = {proj.name} className=\"Thumbnail\"/>\r\n                    <p className=\"ParagraphFont\">{proj.name}</p>\r\n                  </Button>\r\n                </div>\r\n                ) : null}\r\n                {proj.exists2 ? \r\n                \t(\r\n                <div className=\"cell\">\r\n                  <Button variant=\"dark\" className=\"ButtonProject\" href={proj.link2}>\r\n                    <img src={proj.thumbnail2} alt = {proj.name2} className=\"Thumbnail\"/>\r\n                    <p className=\"ParagraphFont\">{proj.name2}</p>\r\n                  </Button>\r\n                </div>\r\n                ) : null}\r\n                {proj.exists3 ? \r\n                \t(\r\n                <div className=\"cell\">\r\n                  <Button variant=\"dark\" className=\"ButtonProject\" href={proj.link3}>\r\n                    <img src={proj.thumbnail3} alt = {proj.name3} className=\"Thumbnail\"/>\r\n                    <p className=\"ParagraphFont\">{proj.name3}</p>\r\n                  </Button>\r\n                </div>\r\n                ) : null}\r\n                <br/>\r\n              </MediaQuery>\r\n              <MediaQuery maxWidth={799}>\r\n              \r\n              {proj.exists ? \r\n                \t(\r\n                <>\r\n                <div className=\"table-row\">\r\n                  <Button variant=\"dark\" className=\"ButtonProject\" href={proj.link}>\r\n                  <img src={proj.thumbnail} alt = {proj.name} className=\"Thumbnail\"/>\r\n                  <p className=\"ParagraphFont\">{proj.name}</p>\r\n                  </Button>\r\n                </div>\r\n                <br/>\r\n                </>\r\n                ) : null}\r\n                {proj.exists2 ? \r\n                \t(\r\n                <>\r\n                <div className=\"table-row\">\r\n                  <Button variant=\"dark\" className=\"ButtonProject\" href={proj.link2}>\r\n                  <img src={proj.thumbnail2} alt = {proj.name2} className=\"Thumbnail\"/>\r\n                  <p className=\"ParagraphFont\">{proj.name2}</p>\r\n                  </Button>\r\n                </div>\r\n                <br/>\r\n                </>\r\n                ) : null}\r\n                {proj.exists3 ? \r\n                \t(\r\n                <>\r\n                <div className=\"table-row\">\r\n                  <Button variant=\"dark\" className=\"ButtonProject\" href={proj.link3}>\r\n                  <img src={proj.thumbnail3} alt = {proj.name3} className=\"Thumbnail\"/>\r\n                  <p className=\"ParagraphFont\">{proj.name3}</p>\r\n                  </Button>\r\n                </div>\r\n                <br/>\r\n                </>\r\n                 ) : null}\r\n              </MediaQuery>\r\n              </div>\r\n            )}\r\n            </Spring>\r\n      ));\r\n\r\n    return(\r\n      <div className=\"ProjectBackground\">\r\n      <div className=\"ProjectTable\">\r\n        {WebApps}\r\n      </div>\r\n      </div>\r\n      );\r\n  }\r\n  \r\n\r\n\r\n  function CategorySelector() {\r\n    const [checked, setChecked] = useState(false);\r\n\r\n\r\n    const radios = [\r\n      { name: 'Web Apps', value: '1' },\r\n      { name: 'Desktop Apps', value: '2' },\r\n      { name: 'Video Games', value: '4' }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <ButtonGroup toggle>\r\n          {radios.map((radio, idx) => (\r\n            <ToggleButton\r\n              key={idx}\r\n              type=\"radio\"\r\n              variant=\"outline-dark\"\r\n              name=\"radio\"\r\n              value={radio.value}\r\n              checked={radioState === radio.value}\r\n              onChange={\r\n                (e) => {\r\n                changeState(e.currentTarget.value);\r\n                }}\r\n              size=\"lg\"\r\n              className=\"SelectorButton\"\r\n            >\r\n              {radio.name}\r\n            </ToggleButton>\r\n          ))}\r\n        </ButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n}","/home/ubuntu/portfolio/src/Title.js",["93"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nexport default class Title extends React.Component{\r\n  componentDidMount(){\r\n    document.title = \"Joshua Williams Portfolio\"\r\n  }\r\n  render(){\r\n    return null;\r\n  }\r\n}\r\n","/home/ubuntu/portfolio/src/Header.js",["94","95"],"import { Spring } from 'react-spring/renderprops';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport React from 'react';\r\n\r\n\r\nexport default class Header extends React.Component {\r\n  visible = false;\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  onChangeVisibility = (isVisible) => {\r\n    this.visible = isVisible;\r\n    this.forceUpdate();\r\n  }\r\n  render(){\r\n\r\n    return (\r\n      <>\r\n        <VisibilitySensor active = {this.active} onChange={this.onChangeVisibility} active={!this.visible}>\r\n        {({ isVisible }) => (\r\n          <div>\r\n            <Spring\r\n            from={{opacity: 0}}\r\n            to={{opacity: isVisible ? 1 : 0}}\r\n            config={{duration:500, delay: this.props.delay}}\r\n            >\r\n            {props =>(\r\n            <div style={props}>\r\n               <h2 className={this.props.fontStyle}>\r\n                {this.props.contents}\r\n                </h2>\r\n            </div>\r\n            )}\r\n            </Spring>\r\n          </div>\r\n          )}\r\n        </VisibilitySensor>\r\n      </>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":51,"column":95,"nodeType":"102","endLine":51,"endColumn":175},{"ruleId":"100","severity":1,"message":"101","line":54,"column":77,"nodeType":"102","endLine":54,"endColumn":159},{"ruleId":"100","severity":1,"message":"101","line":62,"column":95,"nodeType":"102","endLine":62,"endColumn":175},{"ruleId":"100","severity":1,"message":"101","line":65,"column":77,"nodeType":"102","endLine":65,"endColumn":159},{"ruleId":"103","severity":1,"message":"104","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":28,"column":13,"nodeType":"102","endLine":28,"endColumn":103},{"ruleId":"107","severity":1,"message":"108","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":4},{"ruleId":"111","severity":1,"message":"112","line":20,"column":85,"nodeType":"113","endLine":20,"endColumn":107},{"ruleId":"103","severity":1,"message":"114","line":3,"column":17,"nodeType":"105","messageId":"106","endLine":3,"endColumn":26},{"ruleId":"103","severity":1,"message":"115","line":3,"column":28,"nodeType":"105","messageId":"106","endLine":3,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":4},{"ruleId":"103","severity":1,"message":"116","line":20,"column":11,"nodeType":"105","messageId":"106","endLine":20,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":24,"column":110,"nodeType":"113","endLine":24,"endColumn":132},{"ruleId":"103","severity":1,"message":"114","line":3,"column":17,"nodeType":"105","messageId":"106","endLine":3,"endColumn":26},{"ruleId":"103","severity":1,"message":"115","line":3,"column":28,"nodeType":"105","messageId":"106","endLine":3,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":4},{"ruleId":"103","severity":1,"message":"116","line":20,"column":11,"nodeType":"105","messageId":"106","endLine":20,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":24,"column":110,"nodeType":"113","endLine":24,"endColumn":132},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"115","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"117","line":1,"column":38,"nodeType":"105","messageId":"106","endLine":1,"endColumn":44},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"115","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"117","line":1,"column":38,"nodeType":"105","messageId":"106","endLine":1,"endColumn":44},{"ruleId":"103","severity":1,"message":"104","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"103","severity":1,"message":"118","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":40,"column":19,"nodeType":"121","messageId":"122","endLine":40,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":42,"column":25,"nodeType":"121","messageId":"122","endLine":42,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":44,"column":25,"nodeType":"121","messageId":"122","endLine":44,"endColumn":27},{"ruleId":"103","severity":1,"message":"123","line":147,"column":12,"nodeType":"105","messageId":"106","endLine":147,"endColumn":19},{"ruleId":"103","severity":1,"message":"124","line":147,"column":21,"nodeType":"105","messageId":"106","endLine":147,"endColumn":31},{"ruleId":"103","severity":1,"message":"125","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":4},{"ruleId":"111","severity":1,"message":"112","line":20,"column":85,"nodeType":"113","endLine":20,"endColumn":107},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Keyframes' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'useState' is defined but never used.","'isMobile' is assigned a value but never used.","'useRef' is defined but never used.","'CanvasBackground' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]